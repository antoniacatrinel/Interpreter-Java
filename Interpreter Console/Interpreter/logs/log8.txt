Program state with ID: 8
Execution stack:
{(reference(int) v; (new(v, 20); (reference(reference(int)) a; (new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5))))))}
Symbol table:
{}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 8
Execution stack:
{(new(v, 20); (reference(reference(int)) a; (new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5))))) | reference(int) v}
Symbol table:
{}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 8
Execution stack:
{(new(v, 20); (reference(reference(int)) a; (new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5))))) | reference(int) v}
Symbol table:
{}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 8
Execution stack:
{(new(v, 20); (reference(reference(int)) a; (new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5)))))}
Symbol table:
{v -> (0, int)}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 8
Execution stack:
{(new(v, 20); (reference(reference(int)) a; (new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5)))))}
Symbol table:
{v -> (0, int)}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 8
Execution stack:
{(reference(reference(int)) a; (new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5)))) | new(v, 20)}
Symbol table:
{v -> (0, int)}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 8
Execution stack:
{(reference(reference(int)) a; (new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5)))) | new(v, 20)}
Symbol table:
{v -> (0, int)}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 8
Execution stack:
{(reference(reference(int)) a; (new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5))))}
Symbol table:
{v -> (1, int)}
Output:
{}
Heap:
{1 -> 20}
File table:
{}

Program state with ID: 8
Execution stack:
{(reference(reference(int)) a; (new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5))))}
Symbol table:
{v -> (1, int)}
Output:
{}
Heap:
{1 -> 20}
File table:
{}

Program state with ID: 8
Execution stack:
{(new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5))) | reference(reference(int)) a}
Symbol table:
{v -> (1, int)}
Output:
{}
Heap:
{1 -> 20}
File table:
{}

Program state with ID: 8
Execution stack:
{(new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5))) | reference(reference(int)) a}
Symbol table:
{v -> (1, int)}
Output:
{}
Heap:
{1 -> 20}
File table:
{}

Program state with ID: 8
Execution stack:
{(new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5)))}
Symbol table:
{a -> (0, reference(int)), v -> (1, int)}
Output:
{}
Heap:
{1 -> 20}
File table:
{}

Program state with ID: 8
Execution stack:
{(new(a, v); (print(readHeap(v)); print(readHeap(readHeap(a)) + 5)))}
Symbol table:
{a -> (0, reference(int)), v -> (1, int)}
Output:
{}
Heap:
{1 -> 20}
File table:
{}

Program state with ID: 8
Execution stack:
{(print(readHeap(v)); print(readHeap(readHeap(a)) + 5)) | new(a, v)}
Symbol table:
{a -> (0, reference(int)), v -> (1, int)}
Output:
{}
Heap:
{1 -> 20}
File table:
{}

Program state with ID: 8
Execution stack:
{(print(readHeap(v)); print(readHeap(readHeap(a)) + 5)) | new(a, v)}
Symbol table:
{a -> (0, reference(int)), v -> (1, int)}
Output:
{}
Heap:
{1 -> 20}
File table:
{}

Program state with ID: 8
Execution stack:
{(print(readHeap(v)); print(readHeap(readHeap(a)) + 5))}
Symbol table:
{a -> (2, reference(int)), v -> (1, int)}
Output:
{}
Heap:
{1 -> 20, 2 -> (1, int)}
File table:
{}

Program state with ID: 8
Execution stack:
{(print(readHeap(v)); print(readHeap(readHeap(a)) + 5))}
Symbol table:
{a -> (2, reference(int)), v -> (1, int)}
Output:
{}
Heap:
{1 -> 20, 2 -> (1, int)}
File table:
{}

Program state with ID: 8
Execution stack:
{print(readHeap(readHeap(a)) + 5) | print(readHeap(v))}
Symbol table:
{a -> (2, reference(int)), v -> (1, int)}
Output:
{}
Heap:
{1 -> 20, 2 -> (1, int)}
File table:
{}

Program state with ID: 8
Execution stack:
{print(readHeap(readHeap(a)) + 5) | print(readHeap(v))}
Symbol table:
{a -> (2, reference(int)), v -> (1, int)}
Output:
{}
Heap:
{1 -> 20, 2 -> (1, int)}
File table:
{}

Program state with ID: 8
Execution stack:
{print(readHeap(readHeap(a)) + 5)}
Symbol table:
{a -> (2, reference(int)), v -> (1, int)}
Output:
{20}
Heap:
{1 -> 20, 2 -> (1, int)}
File table:
{}

Program state with ID: 8
Execution stack:
{print(readHeap(readHeap(a)) + 5)}
Symbol table:
{a -> (2, reference(int)), v -> (1, int)}
Output:
{20}
Heap:
{1 -> 20, 2 -> (1, int)}
File table:
{}

Program state with ID: 8
Execution stack:
{}
Symbol table:
{a -> (2, reference(int)), v -> (1, int)}
Output:
{20, 25}
Heap:
{1 -> 20, 2 -> (1, int)}
File table:
{}

