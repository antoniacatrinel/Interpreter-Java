Program state with ID: 2
Execution stack:
{(int a; (int b; (a = 7; (b = 5; (if(a > b) then b = 2, else b = 3; print(b))))))}
Symbol table:
{}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(int b; (a = 7; (b = 5; (if(a > b) then b = 2, else b = 3; print(b))))) | int a}
Symbol table:
{}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(int b; (a = 7; (b = 5; (if(a > b) then b = 2, else b = 3; print(b))))) | int a}
Symbol table:
{}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(int b; (a = 7; (b = 5; (if(a > b) then b = 2, else b = 3; print(b)))))}
Symbol table:
{a -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(int b; (a = 7; (b = 5; (if(a > b) then b = 2, else b = 3; print(b)))))}
Symbol table:
{a -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(a = 7; (b = 5; (if(a > b) then b = 2, else b = 3; print(b)))) | int b}
Symbol table:
{a -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(a = 7; (b = 5; (if(a > b) then b = 2, else b = 3; print(b)))) | int b}
Symbol table:
{a -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(a = 7; (b = 5; (if(a > b) then b = 2, else b = 3; print(b))))}
Symbol table:
{a -> 0, b -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(a = 7; (b = 5; (if(a > b) then b = 2, else b = 3; print(b))))}
Symbol table:
{a -> 0, b -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(b = 5; (if(a > b) then b = 2, else b = 3; print(b))) | a = 7}
Symbol table:
{a -> 0, b -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(b = 5; (if(a > b) then b = 2, else b = 3; print(b))) | a = 7}
Symbol table:
{a -> 0, b -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(b = 5; (if(a > b) then b = 2, else b = 3; print(b)))}
Symbol table:
{a -> 7, b -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(b = 5; (if(a > b) then b = 2, else b = 3; print(b)))}
Symbol table:
{a -> 7, b -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(if(a > b) then b = 2, else b = 3; print(b)) | b = 5}
Symbol table:
{a -> 7, b -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(if(a > b) then b = 2, else b = 3; print(b)) | b = 5}
Symbol table:
{a -> 7, b -> 0}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(if(a > b) then b = 2, else b = 3; print(b))}
Symbol table:
{a -> 7, b -> 5}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{(if(a > b) then b = 2, else b = 3; print(b))}
Symbol table:
{a -> 7, b -> 5}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{print(b) | if(a > b) then b = 2, else b = 3}
Symbol table:
{a -> 7, b -> 5}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{print(b) | if(a > b) then b = 2, else b = 3}
Symbol table:
{a -> 7, b -> 5}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{print(b) | b = 2}
Symbol table:
{a -> 7, b -> 5}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{print(b) | b = 2}
Symbol table:
{a -> 7, b -> 5}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{print(b)}
Symbol table:
{a -> 7, b -> 2}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{print(b)}
Symbol table:
{a -> 7, b -> 2}
Output:
{}
Heap:
{}
File table:
{}

Program state with ID: 2
Execution stack:
{}
Symbol table:
{a -> 7, b -> 2}
Output:
{2}
Heap:
{}
File table:
{}

